\hypertarget{container_8c}{}\section{container.\+c File Reference}
\label{container_8c}\index{container.\+c@{container.\+c}}
{\ttfamily \#include \char`\"{}head.\+h\char`\"{}}\newline
Include dependency graph for container.\+c\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{container_8c_af20cf8b598b78389dff22b3d176a3727}{init\+Container} (int width, int height, \hyperlink{structcontainer}{container} $\ast$item)
\item 
\hyperlink{structcontainer}{container} \hyperlink{container_8c_aae1449e449d2f69b52594cccb1dc1e42}{random\+Piece} ()
\item 
\hyperlink{structcontainer}{container} \hyperlink{container_8c_acdd60fa36d582876e0c842fadf1816d7}{createU} ()
\item 
\hyperlink{structcontainer}{container} \hyperlink{container_8c_a7d1d76e4670bb877ca26b4e79db69927}{create\+L1} ()
\item 
\hyperlink{structcontainer}{container} \hyperlink{container_8c_a4a33c04f7b6aa23f5c9b912bf9c269d7}{create\+L2} ()
\item 
\hyperlink{structcontainer}{container} \hyperlink{container_8c_a6fe2743b89336db44793a23f4271b75a}{create\+Cross} ()
\item 
\hyperlink{structcontainer}{container} \hyperlink{container_8c_a8a2fed74e961c8603aaaacd3ec243111}{create\+Dot} ()
\item 
\hyperlink{structcontainer}{container} \hyperlink{container_8c_ab4a57956d1d813e81c375d37dcd9dd83}{create\+Line} ()
\item 
void \hyperlink{container_8c_a2a9dbe4ff3be91108eadb428d77debd6}{delete\+Container} (\hyperlink{structcontainer}{container} $\ast$item)
\item 
int \hyperlink{container_8c_a7a74c6812adffb8d4419092b999a823b}{check\+Collision} (\hyperlink{structcontainer}{container} $\ast$grid, \hyperlink{structcontainer}{container} $\ast$piece, int x, int y)
\item 
void \hyperlink{container_8c_a46bfac7d0493d39bd4aad51f270bd0d7}{place} (\hyperlink{structcontainer}{container} $\ast$grid, \hyperlink{structcontainer}{container} $\ast$piece, int x, int y)
\end{DoxyCompactItemize}


\subsection{Function Documentation}
\mbox{\Hypertarget{container_8c_a7a74c6812adffb8d4419092b999a823b}\label{container_8c_a7a74c6812adffb8d4419092b999a823b}} 
\index{container.\+c@{container.\+c}!check\+Collision@{check\+Collision}}
\index{check\+Collision@{check\+Collision}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{check\+Collision()}{checkCollision()}}
{\footnotesize\ttfamily int check\+Collision (\begin{DoxyParamCaption}\item[{\hyperlink{structcontainer}{container} $\ast$}]{grid,  }\item[{\hyperlink{structcontainer}{container} $\ast$}]{piece,  }\item[{int}]{x,  }\item[{int}]{y }\end{DoxyParamCaption})}



Definition at line 110 of file container.\+c.



References container\+::data, container\+::len, and container\+::size.



Referenced by main().


\begin{DoxyCode}
110                                                                      \{
111     \textcolor{keywordflow}{for} (\textcolor{keywordtype}{int} i = 0; i < piece->\hyperlink{structcontainer_a1e938d250074e70b9778df1b59121744}{size}/piece->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len}; i++) \{
112         \textcolor{keywordflow}{for} (\textcolor{keywordtype}{int} j = 0; j < piece->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len}; j++) \{
113             \textcolor{keywordflow}{if} (i+y < 0 || i+y >= (grid->\hyperlink{structcontainer_a1e938d250074e70b9778df1b59121744}{size}/grid->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len}) || j+x < 0 || j+x >= grid->
      \hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len}) \{
114                 \textcolor{keywordflow}{return} 1;
115             \}
116             \textcolor{keywordflow}{if} (grid->\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[((i+y)*grid->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len})+j+x] && piece->\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[(i*piece->
      \hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len})+j]) \{
117                 \textcolor{keywordflow}{return} 1;
118             \}
119         \}
120     \}
121     \textcolor{keywordflow}{return} 0;
122 \}
\end{DoxyCode}
Here is the caller graph for this function\+:
% FIG 1
\mbox{\Hypertarget{container_8c_a6fe2743b89336db44793a23f4271b75a}\label{container_8c_a6fe2743b89336db44793a23f4271b75a}} 
\index{container.\+c@{container.\+c}!create\+Cross@{create\+Cross}}
\index{create\+Cross@{create\+Cross}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{create\+Cross()}{createCross()}}
{\footnotesize\ttfamily \hyperlink{structcontainer}{container} create\+Cross (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Definition at line 75 of file container.\+c.



References container\+::data, and init\+Container().



Referenced by random\+Piece().


\begin{DoxyCode}
75                        \{
76     \hyperlink{structcontainer}{container} piece;
77     \hyperlink{container_8c_af20cf8b598b78389dff22b3d176a3727}{initContainer}(5, 5, &piece);
78     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[2] = 1;
79     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[7] = 1;
80     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[10] = 1;
81     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[11] = 1;
82     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[12] = 1;
83     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[13] = 1;
84     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[14] = 1;
85     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[17] = 1;
86     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[22] = 1;
87     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[24] = 0;
88     \textcolor{keywordflow}{return} piece;
89 \}
\end{DoxyCode}
Here is the call graph for this function\+:
% FIG 2
Here is the caller graph for this function\+:
% FIG 3
\mbox{\Hypertarget{container_8c_a8a2fed74e961c8603aaaacd3ec243111}\label{container_8c_a8a2fed74e961c8603aaaacd3ec243111}} 
\index{container.\+c@{container.\+c}!create\+Dot@{create\+Dot}}
\index{create\+Dot@{create\+Dot}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{create\+Dot()}{createDot()}}
{\footnotesize\ttfamily \hyperlink{structcontainer}{container} create\+Dot (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Definition at line 91 of file container.\+c.



References container\+::data, and init\+Container().



Referenced by random\+Piece().


\begin{DoxyCode}
91                      \{
92     \hyperlink{structcontainer}{container} piece;
93     \hyperlink{container_8c_af20cf8b598b78389dff22b3d176a3727}{initContainer}(1, 1, &piece);
94     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[0] = 1;
95     \textcolor{keywordflow}{return} piece;
96 \}
\end{DoxyCode}
Here is the call graph for this function\+:
% FIG 4
Here is the caller graph for this function\+:
% FIG 5
\mbox{\Hypertarget{container_8c_a7d1d76e4670bb877ca26b4e79db69927}\label{container_8c_a7d1d76e4670bb877ca26b4e79db69927}} 
\index{container.\+c@{container.\+c}!create\+L1@{create\+L1}}
\index{create\+L1@{create\+L1}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{create\+L1()}{createL1()}}
{\footnotesize\ttfamily \hyperlink{structcontainer}{container} create\+L1 (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Definition at line 55 of file container.\+c.



References container\+::data, and init\+Container().



Referenced by random\+Piece().


\begin{DoxyCode}
55                     \{
56     \hyperlink{structcontainer}{container} piece;
57     \hyperlink{container_8c_af20cf8b598b78389dff22b3d176a3727}{initContainer}(3, 2, &piece);
58     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[0] = 1;
59     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[3] = 1;
60     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[4] = 1;
61     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[5] = 1;
62     \textcolor{keywordflow}{return} piece;
63 \}
\end{DoxyCode}
Here is the call graph for this function\+:
% FIG 6
Here is the caller graph for this function\+:
% FIG 7
\mbox{\Hypertarget{container_8c_a4a33c04f7b6aa23f5c9b912bf9c269d7}\label{container_8c_a4a33c04f7b6aa23f5c9b912bf9c269d7}} 
\index{container.\+c@{container.\+c}!create\+L2@{create\+L2}}
\index{create\+L2@{create\+L2}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{create\+L2()}{createL2()}}
{\footnotesize\ttfamily \hyperlink{structcontainer}{container} create\+L2 (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Definition at line 65 of file container.\+c.



References container\+::data, and init\+Container().



Referenced by random\+Piece().


\begin{DoxyCode}
65                     \{
66     \hyperlink{structcontainer}{container} piece;
67     \hyperlink{container_8c_af20cf8b598b78389dff22b3d176a3727}{initContainer}(3, 2, &piece);
68     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[2] = 1;
69     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[3] = 1;
70     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[4] = 1;
71     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[5] = 1;
72     \textcolor{keywordflow}{return} piece;
73 \}
\end{DoxyCode}
Here is the call graph for this function\+:
% FIG 8
Here is the caller graph for this function\+:
% FIG 9
\mbox{\Hypertarget{container_8c_ab4a57956d1d813e81c375d37dcd9dd83}\label{container_8c_ab4a57956d1d813e81c375d37dcd9dd83}} 
\index{container.\+c@{container.\+c}!create\+Line@{create\+Line}}
\index{create\+Line@{create\+Line}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{create\+Line()}{createLine()}}
{\footnotesize\ttfamily \hyperlink{structcontainer}{container} create\+Line (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Definition at line 98 of file container.\+c.



References container\+::data, and init\+Container().



Referenced by random\+Piece().


\begin{DoxyCode}
98                       \{
99     \hyperlink{structcontainer}{container} piece;
100     \hyperlink{container_8c_af20cf8b598b78389dff22b3d176a3727}{initContainer}(1, 2, &piece);
101     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[0] = 1;
102     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[1] = 1;
103     \textcolor{keywordflow}{return} piece;
104 \}
\end{DoxyCode}
Here is the call graph for this function\+:
% FIG 10
Here is the caller graph for this function\+:
% FIG 11
\mbox{\Hypertarget{container_8c_acdd60fa36d582876e0c842fadf1816d7}\label{container_8c_acdd60fa36d582876e0c842fadf1816d7}} 
\index{container.\+c@{container.\+c}!createU@{createU}}
\index{createU@{createU}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{create\+U()}{createU()}}
{\footnotesize\ttfamily \hyperlink{structcontainer}{container} createU (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Definition at line 42 of file container.\+c.



References container\+::data, and init\+Container().



Referenced by random\+Piece().


\begin{DoxyCode}
42                    \{
43     \hyperlink{structcontainer}{container} piece;
44     \hyperlink{container_8c_af20cf8b598b78389dff22b3d176a3727}{initContainer}(3, 3, &piece);
45     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[0] = 1;
46     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[2] = 1;
47     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[3] = 1;
48     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[5] = 1;
49     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[6] = 1;
50     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[7] = 1;
51     piece.\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[8] = 1;
52     \textcolor{keywordflow}{return} piece;
53 \}
\end{DoxyCode}
Here is the call graph for this function\+:
% FIG 12
Here is the caller graph for this function\+:
% FIG 13
\mbox{\Hypertarget{container_8c_a2a9dbe4ff3be91108eadb428d77debd6}\label{container_8c_a2a9dbe4ff3be91108eadb428d77debd6}} 
\index{container.\+c@{container.\+c}!delete\+Container@{delete\+Container}}
\index{delete\+Container@{delete\+Container}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{delete\+Container()}{deleteContainer()}}
{\footnotesize\ttfamily void delete\+Container (\begin{DoxyParamCaption}\item[{\hyperlink{structcontainer}{container} $\ast$}]{item }\end{DoxyParamCaption})}



Definition at line 106 of file container.\+c.



References container\+::data.


\begin{DoxyCode}
106                                       \{
107     free(item->\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data});
108 \}
\end{DoxyCode}
\mbox{\Hypertarget{container_8c_af20cf8b598b78389dff22b3d176a3727}\label{container_8c_af20cf8b598b78389dff22b3d176a3727}} 
\index{container.\+c@{container.\+c}!init\+Container@{init\+Container}}
\index{init\+Container@{init\+Container}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{init\+Container()}{initContainer()}}
{\footnotesize\ttfamily void init\+Container (\begin{DoxyParamCaption}\item[{int}]{width,  }\item[{int}]{height,  }\item[{\hyperlink{structcontainer}{container} $\ast$}]{item }\end{DoxyParamCaption})}



Definition at line 3 of file container.\+c.



References container\+::data, container\+::len, and container\+::size.



Referenced by create\+Cross(), create\+Dot(), create\+L1(), create\+L2(), create\+Line(), create\+U(), and main().


\begin{DoxyCode}
3                                                           \{
4     item->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len} = width;
5     item->\hyperlink{structcontainer_a1e938d250074e70b9778df1b59121744}{size} = width * height;
6     item->\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data} = malloc(item->\hyperlink{structcontainer_a1e938d250074e70b9778df1b59121744}{size} * \textcolor{keyword}{sizeof}(\textcolor{keywordtype}{char}));
7     \textcolor{keywordflow}{for} (\textcolor{keywordtype}{int} i = 0; i < item->\hyperlink{structcontainer_a1e938d250074e70b9778df1b59121744}{size}; ++i)
8     \{
9         item->\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[i] = 0;
10     \}
11 \}
\end{DoxyCode}
Here is the caller graph for this function\+:
% FIG 14
\mbox{\Hypertarget{container_8c_a46bfac7d0493d39bd4aad51f270bd0d7}\label{container_8c_a46bfac7d0493d39bd4aad51f270bd0d7}} 
\index{container.\+c@{container.\+c}!place@{place}}
\index{place@{place}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{place()}{place()}}
{\footnotesize\ttfamily void place (\begin{DoxyParamCaption}\item[{\hyperlink{structcontainer}{container} $\ast$}]{grid,  }\item[{\hyperlink{structcontainer}{container} $\ast$}]{piece,  }\item[{int}]{x,  }\item[{int}]{y }\end{DoxyParamCaption})}



Definition at line 124 of file container.\+c.



References container\+::data, container\+::len, and container\+::size.



Referenced by main().


\begin{DoxyCode}
124                                                               \{
125     \textcolor{keywordflow}{for} (\textcolor{keywordtype}{int} i = 0; i < piece->\hyperlink{structcontainer_a1e938d250074e70b9778df1b59121744}{size}/piece->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len}; i++) \{
126         \textcolor{keywordflow}{for} (\textcolor{keywordtype}{int} j = 0; j < piece->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len}; j++) \{
127             \textcolor{keywordflow}{if} (piece->\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[(i*piece->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len})+j] == 1) \{
128                 grid->\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[((i+y)*grid->\hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len})+j+x] = piece->\hyperlink{structcontainer_aefae69762fe9c24169e2ca5418a711a1}{data}[(i*piece->
      \hyperlink{structcontainer_a0069496fb95c879cd33fb79ab726e81a}{len})+j];
129             \}
130         \}
131     \}
132 \}
\end{DoxyCode}
Here is the caller graph for this function\+:
% FIG 15
\mbox{\Hypertarget{container_8c_aae1449e449d2f69b52594cccb1dc1e42}\label{container_8c_aae1449e449d2f69b52594cccb1dc1e42}} 
\index{container.\+c@{container.\+c}!random\+Piece@{random\+Piece}}
\index{random\+Piece@{random\+Piece}!container.\+c@{container.\+c}}
\subsubsection{\texorpdfstring{random\+Piece()}{randomPiece()}}
{\footnotesize\ttfamily \hyperlink{structcontainer}{container} random\+Piece (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Definition at line 13 of file container.\+c.



References create\+Cross(), create\+Dot(), create\+L1(), create\+L2(), create\+Line(), and create\+U().



Referenced by main().


\begin{DoxyCode}
13                        \{
14     \hyperlink{structcontainer}{container} piece;
15     srand(time(NULL));
16     \textcolor{keywordtype}{int} random = rand() % 6;
17     \textcolor{keywordflow}{switch} (random)\{
18         \textcolor{keywordflow}{case} 0 :
19             piece = \hyperlink{container_8c_acdd60fa36d582876e0c842fadf1816d7}{createU}();
20             \textcolor{keywordflow}{return} piece;
21         \textcolor{keywordflow}{case} 1 :
22             piece = \hyperlink{container_8c_a7d1d76e4670bb877ca26b4e79db69927}{createL1}();
23             \textcolor{keywordflow}{return} piece;
24         \textcolor{keywordflow}{case} 2 :
25             piece = \hyperlink{container_8c_a4a33c04f7b6aa23f5c9b912bf9c269d7}{createL2}();
26             \textcolor{keywordflow}{return} piece;
27         \textcolor{keywordflow}{case} 3 :
28             piece = \hyperlink{container_8c_a6fe2743b89336db44793a23f4271b75a}{createCross}();
29             \textcolor{keywordflow}{return} piece;
30         \textcolor{keywordflow}{case} 4:
31             piece = \hyperlink{container_8c_a8a2fed74e961c8603aaaacd3ec243111}{createDot}();
32             \textcolor{keywordflow}{return} piece;
33         \textcolor{keywordflow}{case} 5 :
34             piece = \hyperlink{container_8c_ab4a57956d1d813e81c375d37dcd9dd83}{createLine}();
35             \textcolor{keywordflow}{return} piece;
36         default :
37             printf(\textcolor{stringliteral}{"Error : could not generate cooresponding piece for int : %d \(\backslash\)n"}, random);
38             exit(0);
39     \}
40 \}
\end{DoxyCode}
Here is the call graph for this function\+:
% FIG 16
Here is the caller graph for this function\+:
% FIG 17
